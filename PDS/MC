/* REXX */
/*---------------------------*/
/* (M)ove(C)opy a DS - (v3)  */
/* supports "=" for TO-VOL   */
/* supports "*" for TO-NAME  */
/*---------------------------*/
  parse arg dsn
  dsn=strip(dsn,b,"'")
  myid=SYSVAR(SYSUID)
  dsname=dsn
  status MSG('OFF')
  address tso
  /*"FREE ALL"*/
  "FREE FI(SYSIN,SYSPRINT)"
  "DELETE ('"myid".MC.SYSIN')"
  "DELETE ('"myid".MC.SYSPRINT')"
  "ALLOC F(SYSPRINT) DA('"myid".MC.SYSPRINT') SPACE(1,1) CYL NEW CATALOG
         REUSE"
  if RC /= 0 then
    do
      say 'SYSPRINT dataset allocation error !'
      say 'delete dataset : 'myid'.MC.SYSPRINT and start over'
      exit
    end
  "ALLOC F(SYSIN) DA('"myid".MC.SYSIN') SPACE(1,1) TRACKS NEW KEEP
         RECFM(F) BLKSIZE(80) REUSE"
  if RC /= 0 then
    do
      say 'SYSIN dataset allocation error !'
      say 'delete dataset : 'myid'.MC.SYSIN and start over'
      exit
    end
  rcrs='0000'
  sc='                              '
  mc='                              '
  dc='                              '
  ln=length(dsn)
  ln=right(ln,2,'0')
  address LINKPGM "TSOSMS dsn ln rcrs sc mc dc"
  if sc ='                               ' then
    sms='N'
  else
    sms='Y'
  x=listdsi(dsname)
  if rc = 0 then
    SVOL = SYSVOLUME
  else
    SVOL = ''
  wild='N'

  do forever
    address ispexec
    "VPUT (DSN)   PROFILE"
    "VPUT (SVOL)  PROFILE"
    "VPUT (SMS)   PROFILE"
    "VPUT (WILD)  PROFILE"
    "DISPLAY PANEL(MCPAN1)"
    if rc=8 then                /* PF3 */
      do
        say ' '
        SAY '(M)ove(C)opy cancelled by user'
        say ' '
        exit
      end
    "VGET (ACT)   PROFILE"
    "VGET (SVOL)  PROFILE"
    "VGET (TVOL)  PROFILE"
    "VGET (TNAME) PROFILE"
    "VGET (CATL)  PROFILE"
    "VGET (REPL)  PROFILE"
    "VGET (BYSMS) PROFILE"
    "VGET (WILD)  PROFILE"
    address TSO
    targname = dsn
    if tname = '*' then
      do
        TNAME=DSN||'.'
        wild='Y'
        address ISPEXEC
        "VPUT (ACT)   PROFILE"
        "VPUT (SVOL)  PROFILE"
        "VPUT (TVOL)  PROFILE"
        "VPUT (TNAME) PROFILE"
        "VPUT (CATL)  PROFILE"
        "VPUT (REPL)  PROFILE"
        "VPUT (BYSMS) PROFILE"
        "VPUT (WILD)  PROFILE"
        iterate   /* PANEL AGAIN */
      end
    else
      wild='N'
    if tname /= '' then
      targname = tname
    if tvol='=' then
      tvol=svol
    vol='volume('tvol')'
    if repl = 'N' then
      if listdsi(targname vol) = 0 then
        do
          say 'MUST SPECIFY REPLACE=Y ... TARGET DS ALREADY EXISTS'
          exit
        end
    if catl = 'Y' then
      if act = 'C' then
        if listdsi(targname) = 0 then
          do
            say 'CANNOT SPECIFY CATALOG=Y ... TARGET DS ALREADY CATALOGUED'
            exit
          end
    if DSN=TNAME then
      if SVOL=TVOL then
        do
          say 'CANNOT Copy/Move a dataset into itself on SAME VOLUME !!!'
          exit
        end
    newstack
    queue '     COPY DS(INCLUDE('DSN')) -'
    queue '          LOGINDYNAM('SVOL') -'
    queue '          OUTDYNAM('TVOL') -'
    queue '          TOL(ENQF) -'
    queue '          ALLDATA(*) -'
    queue '          TGTALLOC(SRC) -'
    if tname /= ''  then
      do
        queue '          RENUNC('DSN', -'
        queue '          'TNAME') -'
      end
    if repl = 'Y' then
        queue '          REPLACE -'
    if catl = 'Y' then
        queue '          CATALOG -'
    if act = 'M'  then
        queue '          DELETE -'
      else
        queue '          SHARE -'
    if bysms = 'Y' then
      do
        queue '          BYPASSACS(*) -'
        queue '          NULLMGMTCLAS -'
        queue '          NULLSTORCLAS -'
      end
    #jcl = queued()
    do k=1 by 1 until k = #jcl
      pull x1
      jcl.k = x1
    end
    delstack
    x2=strip(x1,'T','-')
    jcl.#jcl = x2
    'EXECIO  *  DISKW SYSIN (STEM jcl. FINIS)'
    if act = 'C' then
      myact = ' COPYING'
    else
      myact = '  MOVING'
    if tname = '' then
      tname=DSN
    /**********************/
    say '***********'
    say '*'myact' *'
    say '***********'
    say ' '
    say DSN 'ON ('SVOL')'
    say ' '
    say ' >--- TO --->'
    say ' '
    say tname 'ON ('TVOL')'
    say ' '
    /**********************/
    do forever
      say 'OK to proceed (Y/N) ?'
      parse upper pull YN
      if YN = 'N' then
        do
          say ' '
          say '(M)ove(C)opy cancelled by user'
          say ' '
          exit
        end
      if YN = 'Y' then leave
    end
    say 'OPERATION PROCEEDING ... PLEASE WAIT'
    ADDRESS TSO "CALL 'SYS1.LINKLIB(ADRDSSU)'"
    /*===================================*/
    ADDRESS TSO
    "FREE FI(SYSPRINT)"
    "ALLOC FI(SYSPRINT) DA('"myid".MC.SYSPRINT') SHR"
    if rc Â¬= 0 then
      do
        say ''myid'.MC.SYSPRINT NOT ALLOCATED .... Check error'
        exit
      end
    "EXECIO * DISKR SYSPRINT(STEM prt. FINIS)"
    do x=1 to prt.0
      if pos('ADR012I',prt.x) <> 0 then
        if pos('CODE IS 0000',prt.x) <> 0 then
          do
            SAY '    OO       K    K '
            SAY '  O    O     K  K   '
            SAY '  O    O     K K    '
            SAY '  O    O     K  K   '
            SAY '    OO       K    K '
            SAY '  ================= '
            call cleanup
            exit
          end
    end
    say 'NON-ZERO return code ... please check the following log'
    "ISPEXEC BROWSE DATASET('"myid".MC.SYSPRINT')"
    call cleanup
  end  /* DO FOREVER */
exit

/*   SUBROUTINES  */

CLEANUP:
  "FREE DA('"myid".MC.SYSIN') DELETE"
  "FREE DA('"myid".MC.SYSPRINT') DELETE"
return
